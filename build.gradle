plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-" + project.mod_version
group = project.maven_group
minecraft {
	accessWidener "src/main/resources/fishbeatgameforme.accesswidener"
}
dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(minecraft.officialMojangMappings())
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "curse.maven:identity-391390:3323413"
	modImplementation "curse.maven:pehkui-319596:3457608"

	//these are needed because of the other 2 mods

	// Player Ability Lib: https://github.com/Ladysnake/PlayerAbilityLib
	include "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"
	modImplementation ("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}

	// Cardinal Components: https://github.com/OnyxStudios/Cardinal-Components-API
	modImplementation "io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_version}"
	include "io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"

	// configs
	modImplementation 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta'
	include 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta:min'

	modImplementation 	"com.github.Virtuoel:KanosConfig:${kanos_config_tag}"
	include "com.github.Virtuoel:KanosConfig:${kanos_config_tag}"
}

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

	maven { url 'https://jitpack.io' }

	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
